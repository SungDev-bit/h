const { malvin } = require('../malvin');
const moment = require('moment-timezone');
const config = require('../settings');
const os = require('os');

const botStartTime = Date.now();
const ALIVE_IMG = config.ALIVE_IMAGE || 'https://files.catbox.moe/v2f5bk.jpg';
const NEWSLETTER_JID = config.NEWSLETTER_JID || '120363402507750390@newsletter';
const AUDIO_URL = config.AUDIO_URL || 'https://files.catbox.moe/pjlpd7.mp3';

// ‚úÖ Full tiny caps mapping
const tinyCapsMap = {
  a: '·¥Ä', b: ' ô', c: '·¥Ñ', d: '·¥Ö', e: '·¥á', f: '“ì', g: '…¢', h: ' ú', i: '…™',
  j: '·¥ä', k: '·¥ã', l: ' ü', m: '·¥ç', n: '…¥', o: '·¥è', p: '·¥ò', q: '«´', r: ' Ä',
  s: '—ï', t: '·¥õ', u: '·¥ú', v: '·¥†', w: '·¥°', x: 'x', y: ' è', z: '·¥¢'
};

const toTinyCaps = (str) =>
  str.split('').map((ch) => tinyCapsMap[ch.toLowerCase()] || ch).join('');

const formatStatusInfo = (pushname, harareTime, harareDate, hrs, mins, secs, config) => `
‚ï≠‚ïê‚ùñ„Äî üî• CYBERIA-MD ALIVE STATUS „Äï‚ùñ‚ïê‚ïÆ
‚îÇ
‚îÇ üëã Hello, ${pushname}! üôÉ
‚îÇ
‚îÇ ‚è∞ Time       : ${harareTime}
‚îÇ üìÜ Date       : ${harareDate}
‚îÇ ‚è≥ Uptime     : ${hrs}h ${mins}m ${secs}s
‚îÇ üß© RAM Usage  : ${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB / ${Math.round(os.totalmem() / 1024 / 1024)}MB
‚îÇ
‚îÇ üì¢ Notice:
‚îÇ I am not responsible for any WhatsApp bans
‚îÇ that may occur due to the usage of this bot.
‚îÇ Please use responsibly and at your own risk ‚ö†Ô∏è
‚îÇ
‚îÇ üîó Repo       : ${config.REPO || 'Not Set'}
‚îÇ
‚ï∞‚ïê‚ùñ„Äî ü•∞ Powered by Cyberia-MD „Äï‚ùñ‚ïê‚ïØ
`.trim();

malvin({
  pattern: 'alive',
  alias: ['uptime', 'runtime'],
  desc: 'Check if the bot is active.',
  category: 'info',
  react: 'üöÄ',
  filename: __filename,
}, async (client, mek, m, { reply, from }) => {   // ‚úÖ fixed shadowing
  try {
    const pushname = m.pushName || 'User';
    const harareTime = moment().tz('Africa/Harare').format('HH:mm:ss');
    const harareDate = moment().tz('Africa/Harare').format('dddd, MMMM Do YYYY');

    const runtimeMs = Date.now() - botStartTime;
    const runtimeSeconds = Math.floor((runtimeMs / 1000) % 60);
    const runtimeMinutes = Math.floor((runtimeMs / (1000 * 60)) % 60);
    const runtimeHours = Math.floor(runtimeMs / (1000 * 60 * 60));

    const statusInfo = formatStatusInfo(
      pushname,
      harareTime,
      harareDate,
      runtimeHours,
      runtimeMinutes,
      runtimeSeconds,
      config
    );

    // Send alive image & caption
    await client.sendMessage(from, {
      image: { url: ALIVE_IMG },
      caption: statusInfo,
      contextInfo: {
        mentionedJid: [m.sender],
        forwardingScore: 999,
        isForwarded: true,
        // ‚ö†Ô∏è optional: depends on Baileys version
        // forwardedNewsletterMessageInfo: {
        //   newsletterJid: NEWSLETTER_JID,
        //   newsletterName: toTinyCaps('üî• Cyberia-MDü•∞'),
        //   serverMessageId: 143,
        // },
      },
    }, { quoted: mek });

    // Send alive audio
    await client.sendMessage(from, {
      audio: { url: AUDIO_URL },
      mimetype: 'audio/mp4',
      ptt: true,
    }, { quoted: mek });

  } catch (error) {
    console.error('‚ùå Error in alive command:', error.message);
    return reply(toTinyCaps(`
      An error occurred while processing the alive command.
      Error: ${error.message}
    `).trim());
  }
});
